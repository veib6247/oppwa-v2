{"mappings":"ACgMA,sDAGA","sources":["ResultPage.d4d45436.css","src/ResultPage.vue"],"sourcesContent":[".v-enter-active[data-v-e31acd] {\n  transition: opacity .5s;\n}\n\n.v-enter-from[data-v-e31acd], .v-leave-to[data-v-e31acd] {\n  opacity: 0;\n}\n\n/*# sourceMappingURL=ResultPage.d4d45436.css.map */\n","<script>\r\n// import reusable components\r\nimport FormButton from \"./components/FormButton.vue\";\r\nimport TextNotif from \"./components/TextNotif.vue\";\r\nimport FormDisplayResponse from \"./components/FormDisplayResponse.vue\";\r\n\r\n// import the result script\r\nconst fetchSessionPath = require(\"url:./../php/GetSessionData.php\");\r\nconst getTransactionResultPath = require(\"url:./../php/GetTransactionResults.php\");\r\nconst noiceImage = require(\"url:./assets/noice.png\");\r\n\r\nexport default {\r\n  components: { FormButton, TextNotif, FormDisplayResponse },\r\n  data() {\r\n    return {\r\n      msg: \"Data Received\",\r\n      checkoutID: \"\",\r\n      resourcePath: \"\",\r\n      sessionData: \"\",\r\n      error: \"\",\r\n      response: \"\",\r\n      noiceImagePath: \"\",\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    redirectToHome() {\r\n      // get current URL\r\n      const currentURL = new URL(window.location.href).toString();\r\n      // removes the last part of the URL to then redirects back to the homepage\r\n      window.location.replace(currentURL.split(\"/\").slice(0, -1).join(\"/\"));\r\n    },\r\n\r\n    // on page load, sets the passed ID and path\r\n    getURLParameters() {\r\n      const queryString = window.location.search;\r\n      if (queryString !== \"\") {\r\n        console.info(\"Search query:\", queryString);\r\n      }\r\n\r\n      const urlParams = new URLSearchParams(queryString);\r\n\r\n      if (urlParams.has(\"id\")) {\r\n        this.checkoutID = urlParams.get(\"id\");\r\n      }\r\n\r\n      if (urlParams.has(\"resourcePath\")) {\r\n        this.resourcePath = urlParams.get(\"resourcePath\");\r\n      }\r\n    },\r\n\r\n    /**\r\n     * call server back to get transaction results\r\n     */\r\n    async fetchSessionData() {\r\n      try {\r\n        const rawReponse = await fetch(fetchSessionPath, {\r\n          method: \"GET\",\r\n        });\r\n\r\n        // clone promise to parse to text later in case server does not respond with expected JSON format\r\n        const backupResponse = rawReponse.clone();\r\n\r\n        try {\r\n          // parse to json and save\r\n          this.sessionData = await rawReponse.json();\r\n          // get the results\r\n          this.fetchTransactionResult();\r\n        } catch (error) {\r\n          this.error = await backupResponse.text();\r\n          console.error(error, this.error);\r\n        }\r\n\r\n        // fetch error catching\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n\r\n    async fetchTransactionResult() {\r\n      try {\r\n        const rawReponse = await fetch(getTransactionResultPath, {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            authToken: this.sessionData.authToken,\r\n            url: `${this.returnSubdomain}.oppwa.com${this.resourcePath}`,\r\n            data: this.sessionData.parameters,\r\n          }),\r\n        });\r\n\r\n        this.response = await rawReponse.json();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    returnSubdomain() {\r\n      return this.sessionData.endPoint.split(\".\")[0];\r\n    },\r\n  },\r\n\r\n  // autoruns\r\n  mounted() {\r\n    this.getURLParameters();\r\n    this.fetchSessionData();\r\n\r\n    this.noiceImagePath = noiceImage;\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <label for=\"\" class=\"label\">{{ msg }}</label>\r\n\r\n  <TextNotif color-type=\"is-danger\" v-if=\"!checkoutID\">\r\n    <code>checkoutID</code> was not detected! Please try the Reporting API\r\n    instead.\r\n  </TextNotif>\r\n\r\n  <TextNotif color-type=\"is-danger\" v-if=\"!resourcePath\">\r\n    <code>resourcePath</code> was not detected! Please try the Reporting API\r\n    instead.\r\n  </TextNotif>\r\n\r\n  <div class=\"table-container\" v-if=\"resourcePath && checkoutID\">\r\n    <table\r\n      class=\"\r\n        table\r\n        mono\r\n        is-bordered is-narrow is-hoverable is-fullwidth is-size-7\r\n      \"\r\n    >\r\n      <tbody>\r\n        <tr>\r\n          <th>ID</th>\r\n          <td>{{ checkoutID }}</td>\r\n        </tr>\r\n        <tr>\r\n          <th>Resource Path</th>\r\n          <td>{{ resourcePath }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <Transition>\r\n    <div v-if=\"!response\">\r\n      <label class=\"label\">Fetching Transaction Results</label>\r\n      <progress class=\"progress is-small is-dark\" max=\"100\">15%</progress>\r\n      <br />\r\n    </div>\r\n  </Transition>\r\n\r\n  <Transition>\r\n    <FormDisplayResponse\r\n      label=\"JSON Response\"\r\n      :row-count=\"38\"\r\n      :data=\"response\"\r\n      v-if=\"response\"\r\n    />\r\n  </Transition>\r\n\r\n  <FormButton\r\n    button-icon=\"fas fa-redo\"\r\n    button-label=\"Go Back\"\r\n    :is-rounded=\"true\"\r\n    @submit-data=\"redirectToHome\"\r\n  />\r\n\r\n  <!-- noice -->\r\n  <nav class=\"level\">\r\n    <div class=\"level-item\">\r\n      <div v-if=\"response.amount === '69.00'\">\r\n        <div class=\"media\">\r\n          <div class=\"media-left\">\r\n            <figure class=\"image is-128x128\">\r\n              <img :src=\"noiceImagePath\" />\r\n            </figure>\r\n          </div>\r\n          <div class=\"media-content\">\r\n            <p class=\"title is-4\">noice</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n</template>\r\n\r\n<style scoped>\r\n/* Generic transitions */\r\n.v-enter-active {\r\n  transition: opacity 0.5s ease;\r\n}\r\n.v-enter-from,\r\n.v-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>"],"names":[],"version":3,"file":"ResultPage.d4d45436.css.map"}